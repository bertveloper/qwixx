[{"C:\\Projects\\qwixx\\src\\index.js":"1","C:\\Projects\\qwixx\\src\\App.js":"2","C:\\Projects\\qwixx\\src\\components\\scorecard.js":"3","C:\\Projects\\qwixx\\src\\components\\numberSquare.js":"4","C:\\Projects\\qwixx\\src\\components\\lock.js":"5","C:\\Projects\\qwixx\\src\\components\\passChecks.js":"6","C:\\Projects\\qwixx\\src\\components\\score.js":"7"},{"size":521,"mtime":1612622624994,"results":"8","hashOfConfig":"9"},{"size":179,"mtime":1615129510821,"results":"10","hashOfConfig":"9"},{"size":17591,"mtime":1617537392767,"results":"11","hashOfConfig":"9"},{"size":1237,"mtime":1612804714240,"results":"12","hashOfConfig":"9"},{"size":1801,"mtime":1615134082132,"results":"13","hashOfConfig":"9"},{"size":703,"mtime":1614953028388,"results":"14","hashOfConfig":"9"},{"size":440,"mtime":1614957307477,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wu0ty",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Projects\\qwixx\\src\\index.js",[],["33","34"],"C:\\Projects\\qwixx\\src\\App.js",[],"C:\\Projects\\qwixx\\src\\components\\scorecard.js",["35","36","37","38"],"import React from 'react';\r\nimport './scorecard.css';\r\nimport NumberSquare from './numberSquare.js';\r\nimport Lock from './lock.js';\r\nimport './passChecks.css';\r\nimport Score from './score.js';\r\n\r\nclass Scorecard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFullscreen: false,\r\n            rows: standardRows,         // TODO: supply instead of hardcode\r\n            locks: standardLocks,       // TODO: supply instead of hardcode\r\n            scores: baseScores,         // TODO: supply instead of hardcode\r\n            passChecks: Array(4).fill(false),\r\n        }\r\n    }\r\n\r\n    handleMode(mode) {\r\n        if (mode === 0) {\r\n            this.setState({\r\n                rows: standardRows,\r\n                locks: standardLocks\r\n            });\r\n        }\r\n        else {\r\n            alert(\"Coming soon\");\r\n        }\r\n    }\r\n\r\n    handleClick(data) {        \r\n        // handle unclick\r\n        if(data.clicked){\r\n            this.handleUnclick(data);\r\n        }\r\n        else {\r\n            // get clicked square\r\n            var copyRows = this.state.rows.slice();\r\n            var copyRow = copyRows[data.y];\r\n            var copySquare = copyRow[data.x];\r\n\r\n            // set clicked\r\n            copySquare.clicked = true;\r\n            copyRow[data.x] = copySquare;\r\n\r\n            // disable previous squares\r\n            for (let i = 0; i < data.x; i++) {\r\n                var sq = copyRow[i];\r\n                sq.disabled = true;\r\n                copyRow[i] = sq;\r\n            }\r\n\r\n            copyRows[data.y] = copyRow;\r\n\r\n            this.setState({\r\n                rows: copyRows\r\n            });\r\n        }\r\n        \r\n        this.checkRowState(data.y);\r\n        this.updateScore();\r\n    }\r\n\r\n    handleUnclick(data){\r\n        var copyRows = this.state.rows.slice();\r\n        \r\n        // get clicked square\r\n        var copyRow = copyRows[data.y];\r\n        var copySquare = copyRow[data.x];\r\n\r\n        // set to unclicked\r\n        copySquare.clicked = false;\r\n        copyRow[data.x] = copySquare;   \r\n\r\n        if (data.x > 0) {\r\n            var prevClickUpdated = false\r\n            var prevCount = 1;\r\n            \r\n            while (!prevClickUpdated && ((data.x - prevCount) >= 0)) {\r\n                var prevSquare = copyRow[data.x - prevCount];\r\n                prevSquare.disabled = false;\r\n                copyRow[data.x - prevCount] = prevSquare;    \r\n                prevCount++;\r\n\r\n                if (prevSquare.clicked) {\r\n                    prevClickUpdated = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            rows: copyRows\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    handleLockClick(lock) {\r\n        var copyLocks = this.state.locks.slice();\r\n\r\n        // if lock was clicked (so unclick), set to enabled\r\n        // if lock was not clicked (so click), set to disabled \r\n        copyLocks[lock.row].clicked = !lock.clicked;\r\n        this.changeDisableStateRow(lock.row, lock.clicked);\r\n\r\n        // TODO: different locks when you close the row yourself vs. someone else\r\n        \r\n        this.setState({\r\n            locks: copyLocks\r\n        });\r\n\r\n        this.updateScore();\r\n\r\n        if (copyLocks.filter(l => l.clicked).length > 1) {\r\n            this.endGame();\r\n        }\r\n    }\r\n\r\n    changeDisableStateRow(row, disabledState){\r\n        var copyRows = this.state.rows.slice();\r\n        var copyRow = copyRows[row];\r\n\r\n        for (let i = copyRow.length - 1; i >= 0; i--) {\r\n            var sq = copyRow[i];\r\n            sq.disabled = disabledState;\r\n\r\n            if (sq.clicked) { break; }\r\n        }\r\n\r\n        this.setState({\r\n            rows: copyRows\r\n        });\r\n    }\r\n\r\n    checkRowState(row) {\r\n        var copyRows = this.state.rows.slice();\r\n        var copyRow = copyRows[row];\r\n\r\n        var rowClickCount = copyRow.filter(c => c.clicked).length;\r\n        var disableValue = true;\r\n        \r\n        if (rowClickCount >= 5) {\r\n            disableValue = false;\r\n        }\r\n\r\n        // enable/disable last two squares\r\n        copyRow[copyRow.length - 1].disabled = disableValue;\r\n        //copyRow[copyRow.length - 2].disabled = disableValue;\r\n\r\n        copyRows[row] = copyRow;\r\n\r\n        this.setState({\r\n            rows: copyRows\r\n        });\r\n    }\r\n\r\n    updateScore() {\r\n        var colors = [\"red\", \"blue\", \"green\", \"yellow\"];\r\n\r\n        // get all clicked squares, group by color\r\n        var firstRowClickedSquares = this.state.rows[0].filter(x => x.clicked);\r\n        var secondRowClickedSquares = this.state.rows[1].filter(x => x.clicked);\r\n        var thirdRowClickedSquares = this.state.rows[2].filter(x => x.clicked);\r\n        var fourthRowClickedSquares = this.state.rows[3].filter(x => x.clicked);\r\n        var allClickedSquares = firstRowClickedSquares.concat(secondRowClickedSquares).concat(thirdRowClickedSquares).concat(fourthRowClickedSquares);\r\n        \r\n        var scoresCopy = this.state.scores.slice();\r\n        var locksCopy = this.state.locks.slice();\r\n\r\n        colors.forEach(clr => {\r\n            var lock = locksCopy.find(l => l.color === clr);\r\n            var lastSq = this.state.rows[lock.row].slice(-1)[0];\r\n            var lockCounts = lock.clicked && lastSq.clicked;\r\n\r\n            var clickedSquares = allClickedSquares.filter(x => x.color === clr);\r\n            var colorScore = scoresCopy.find(s => s.color === clr);\r\n            colorScore.score = this.calculatePoints(clickedSquares.length, lockCounts);\r\n        });\r\n\r\n        this.setState({\r\n            scores: scoresCopy\r\n        })\r\n    }\r\n\r\n    calculatePoints(clickedSquares, lockClicked) {\r\n        if (lockClicked) {\r\n            clickedSquares++;\r\n        }\r\n\r\n        switch (clickedSquares) {\r\n            case 1:\r\n                return 1;\r\n            case 2:\r\n                return 3;\r\n            case 3:\r\n                return 6;\r\n            case 4:\r\n                return 10;\r\n            case 5:\r\n                return 15;\r\n            case 6:\r\n                return 21;\r\n            case 7:\r\n                return 28;\r\n            case 8:\r\n                return 36;\r\n            case 9:\r\n                return 45;\r\n            case 10:\r\n                return 55;\r\n            case 11:\r\n                return 66;\r\n            case 12:\r\n                return 78;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    renderRow(row) {\r\n        var squareList = this.state.rows[row];\r\n        var lock = this.state.locks[row];\r\n\r\n        return (\r\n            <div className=\"sc-row\">\r\n                {squareList.map(s => <NumberSquare \r\n                                        data={s}\r\n                                        onClick={()=> this.handleClick(s)}/>)}\r\n                <Lock \r\n                    data={lock} \r\n                    onClick={()=>this.handleLockClick(lock)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderScores(){\r\n        var scores = this.state.scores.filter(s => s.color != \"total\");\r\n        var totalScore = this.state.scores.filter(s => s.color == \"total\")[0];\r\n        \r\n        return(\r\n            <div className=\"sc-scores\">\r\n                {scores.map(s => <Score \r\n                                    data={s}\r\n                                    onClick={()=> this.handleScoreClick(s)}/>\r\n                            )}\r\n                <Score data={totalScore} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleScoreClick(score) {\r\n        console.log(\"Score clicked: \", score);\r\n\r\n        var scoresCopy = this.state.scores.slice();\r\n        var clickedScore = scoresCopy.find(s => s.color == score.color);\r\n        clickedScore.hidden = !clickedScore.hidden;\r\n\r\n        this.setState({\r\n            scores: scoresCopy\r\n        });\r\n    }\r\n\r\n    renderFullscreenBtn(){\r\n        return(\r\n            <div onClick={()=>this.fullScreen()} >\r\n                {this.state.isFullscreen ? \r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"36\" height=\"36\"><path fillRule=\"evenodd\" d=\"M8.25 3a.75.75 0 01.75.75v3.5A1.75 1.75 0 017.25 9h-3.5a.75.75 0 010-1.5h3.5a.25.25 0 00.25-.25v-3.5A.75.75 0 018.25 3zm7.5 0a.75.75 0 01.75.75v3.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 0115 7.25v-3.5a.75.75 0 01.75-.75zM3 15.75a.75.75 0 01.75-.75h3.5c.966 0 1.75.784 1.75 1.75v3.5a.75.75 0 01-1.5 0v-3.5a.25.25 0 00-.25-.25h-3.5a.75.75 0 01-.75-.75zm12 1c0-.966.784-1.75 1.75-1.75h3.5a.75.75 0 010 1.5h-3.5a.25.25 0 00-.25.25v3.5a.75.75 0 01-1.5 0v-3.5z\"></path></svg>\r\n                    :\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"36\" height=\"36\"><path fillRule=\"evenodd\" d=\"M4.75 4.5a.25.25 0 00-.25.25v3.5a.75.75 0 01-1.5 0v-3.5C3 3.784 3.784 3 4.75 3h3.5a.75.75 0 010 1.5h-3.5zM15 3.75a.75.75 0 01.75-.75h3.5c.966 0 1.75.784 1.75 1.75v3.5a.75.75 0 01-1.5 0v-3.5a.25.25 0 00-.25-.25h-3.5a.75.75 0 01-.75-.75zM3.75 15a.75.75 0 01.75.75v3.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 013 19.25v-3.5a.75.75 0 01.75-.75zm16.5 0a.75.75 0 01.75.75v3.5A1.75 1.75 0 0119.25 21h-3.5a.75.75 0 010-1.5h3.5a.25.25 0 00.25-.25v-3.5a.75.75 0 01.75-.75z\"></path></svg>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fullScreen(){\r\n        var doc = window.document;\r\n        var docEl = doc.documentElement;\r\n\r\n        var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\r\n        var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\r\n\r\n        if(!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n            requestFullScreen.call(docEl);\r\n            this.setState({\r\n                isFullscreen: true\r\n            });\r\n        }\r\n        else {\r\n            cancelFullScreen.call(doc);\r\n            this.setState({\r\n                isFullscreen: false\r\n            });\r\n        }\r\n    }\r\n\r\n    clickPassCheck(index){\r\n        // get pass check\r\n        var passChecksCopy = this.state.passChecks.slice();\r\n        var passCheck = passChecksCopy[index];\r\n        passChecksCopy[index] = !passCheck;\r\n\r\n        var scoresCopy = this.state.scores;\r\n        var passScoreCopy = scoresCopy.find(s => s.color === 'grey')\r\n        var passScore = passChecksCopy.filter(p => p).length * -5;\r\n        passScoreCopy.score = passScore;\r\n\r\n        this.setState({\r\n            passChecks: passChecksCopy,\r\n            scores: scoresCopy\r\n        });\r\n\r\n        // if all checks clicked\r\n        if (!passChecksCopy.includes(false)) {\r\n            this.endGame();\r\n        }\r\n    }\r\n\r\n    endGame(){\r\n        var scoresCopy = this.state.scores.slice();\r\n        var totalScore = scoresCopy.filter(s => s.color != \"total\").map(s => s.score).reduce((a, b) => a+ b);\r\n        var totalScoreObj = scoresCopy.find(s => s.color === \"total\");\r\n        totalScoreObj.score = totalScore;\r\n\r\n        this.setState({\r\n            scores: scoresCopy\r\n        });\r\n\r\n        window.alert(\"Einde! Score: \" + totalScore);\r\n    }\r\n\r\n    renderPassChecks(){\r\n        var passChecks = this.state.passChecks;\r\n\r\n        return (\r\n            <div className=\"sc-pass\"> \r\n                <div className=\"sc-pass-expl\">Mislukte ronde -5</div>\r\n                <div className=\"sc-pass-checks\">\r\n                    {passChecks.map((p,i) =>  \r\n                        <div className=\"sc-pass-check\" onClick={()=>this.clickPassCheck(i)} >\r\n                            {p ? String.fromCharCode(10060) : \"\"}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                    \r\n                    \r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"sc-wrapper\">\r\n                \r\n                <div className=\"sc-sidebar\">\r\n                    {this.renderFullscreenBtn()}\r\n                    \r\n                    <button onClick={()=>this.handleMode(0)}>Standard</button>\r\n                    <button onClick={()=>this.handleMode(1)}>Mixed 1</button>\r\n                    \r\n                </div>\r\n                <div className=\"sc-container-rows\">\r\n                        {this.renderRow(0)}\r\n                        {this.renderRow(1)}\r\n                        {this.renderRow(2)}\r\n                        {this.renderRow(3)}\r\n                </div>\r\n\r\n                <div className=\"sc-container-calculation\">\r\n                    <div className=\"sc-calculation\">\r\n                    </div>\r\n                    {this.renderPassChecks()}\r\n                    {/* <PassChecks data={this.state.passes} /> */}\r\n                    {this.renderScores()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nconst standardRows = [\r\n    [\r\n        {\"x\":0, \"y\":0, \"color\":\"red\", \"number\":2, \"clicked\": false, disabled: false },\r\n        {\"x\":1, \"y\":0, \"color\":\"red\", \"number\":3, \"clicked\": false, disabled: false },\r\n        {\"x\":2, \"y\":0, \"color\":\"red\", \"number\":4, \"clicked\": false, disabled: false },   \r\n        {\"x\":3, \"y\":0, \"color\":\"red\", \"number\":5, \"clicked\": false, disabled: false },\r\n        {\"x\":4, \"y\":0, \"color\":\"red\", \"number\":6, \"clicked\": false, disabled: false },\r\n        {\"x\":5, \"y\":0, \"color\":\"red\", \"number\":7, \"clicked\": false, disabled: false },\r\n        {\"x\":6, \"y\":0, \"color\":\"red\", \"number\":8, \"clicked\": false, disabled: false },\r\n        {\"x\":7, \"y\":0, \"color\":\"red\", \"number\":9, \"clicked\": false, disabled: false},\r\n        {\"x\":8, \"y\":0, \"color\":\"red\", \"number\":10, \"clicked\": false, disabled: false },\r\n        {\"x\":9, \"y\":0, \"color\":\"red\", \"number\":11, \"clicked\": false, disabled: false },\r\n        {\"x\":10, \"y\":0, \"color\":\"red\", \"number\":12, \"clicked\": false, disabled: true },\r\n    ],\r\n    [\r\n        {\"x\":0, \"y\":1, \"color\":\"yellow\", \"number\":2, \"clicked\": false, disabled: false },\r\n        {\"x\":1, \"y\":1, \"color\":\"yellow\", \"number\":3, \"clicked\": false, disabled: false },\r\n        {\"x\":2, \"y\":1, \"color\":\"yellow\", \"number\":4, \"clicked\": false, disabled: false },   \r\n        {\"x\":3, \"y\":1, \"color\":\"yellow\", \"number\":5, \"clicked\": false, disabled: false },\r\n        {\"x\":4, \"y\":1, \"color\":\"yellow\", \"number\":6, \"clicked\": false, disabled: false },\r\n        {\"x\":5, \"y\":1, \"color\":\"yellow\", \"number\":7, \"clicked\": false, disabled: false },\r\n        {\"x\":6, \"y\":1, \"color\":\"yellow\", \"number\":8, \"clicked\": false, disabled: false },\r\n        {\"x\":7, \"y\":1, \"color\":\"yellow\", \"number\":9, \"clicked\": false, disabled: false},\r\n        {\"x\":8, \"y\":1, \"color\":\"yellow\", \"number\":10, \"clicked\": false, disabled: false },\r\n        {\"x\":9, \"y\":1, \"color\":\"yellow\", \"number\":11, \"clicked\": false, disabled: false },\r\n        {\"x\":10, \"y\":1, \"color\":\"yellow\", \"number\":12, \"clicked\": false, disabled: true },\r\n    ],\r\n    [\r\n        {\"x\":0, \"y\":2, \"color\":\"green\", \"number\":12, \"clicked\": false, disabled: false },\r\n        {\"x\":1, \"y\":2, \"color\":\"green\", \"number\":11, \"clicked\": false, disabled: false },\r\n        {\"x\":2, \"y\":2, \"color\":\"green\", \"number\":10, \"clicked\": false, disabled: false },   \r\n        {\"x\":3, \"y\":2, \"color\":\"green\", \"number\":9, \"clicked\": false, disabled: false },\r\n        {\"x\":4, \"y\":2, \"color\":\"green\", \"number\":8, \"clicked\": false, disabled: false },\r\n        {\"x\":5, \"y\":2, \"color\":\"green\", \"number\":7, \"clicked\": false, disabled: false },\r\n        {\"x\":6, \"y\":2, \"color\":\"green\", \"number\":6, \"clicked\": false, disabled: false },\r\n        {\"x\":7, \"y\":2, \"color\":\"green\", \"number\":5, \"clicked\": false, disabled: false},\r\n        {\"x\":8, \"y\":2, \"color\":\"green\", \"number\":4, \"clicked\": false, disabled: false },\r\n        {\"x\":9, \"y\":2, \"color\":\"green\", \"number\":3, \"clicked\": false, disabled: false },\r\n        {\"x\":10, \"y\":2, \"color\":\"green\", \"number\":2, \"clicked\": false, disabled: true },\r\n    ],\r\n    [\r\n        {\"x\":0, \"y\":3, \"color\":\"blue\", \"number\":12, \"clicked\": false, disabled: false },\r\n        {\"x\":1, \"y\":3, \"color\":\"blue\", \"number\":11, \"clicked\": false, disabled: false },\r\n        {\"x\":2, \"y\":3, \"color\":\"blue\", \"number\":10, \"clicked\": false, disabled: false },   \r\n        {\"x\":3, \"y\":3, \"color\":\"blue\", \"number\":9, \"clicked\": false, disabled: false },\r\n        {\"x\":4, \"y\":3, \"color\":\"blue\", \"number\":8, \"clicked\": false, disabled: false },\r\n        {\"x\":5, \"y\":3, \"color\":\"blue\", \"number\":7, \"clicked\": false, disabled: false },\r\n        {\"x\":6, \"y\":3, \"color\":\"blue\", \"number\":6, \"clicked\": false, disabled: false },\r\n        {\"x\":7, \"y\":3, \"color\":\"blue\", \"number\":5, \"clicked\": false, disabled: false},\r\n        {\"x\":8, \"y\":3, \"color\":\"blue\", \"number\":4, \"clicked\": false, disabled: false },\r\n        {\"x\":9, \"y\":3, \"color\":\"blue\", \"number\":3, \"clicked\": false, disabled: false },\r\n        {\"x\":10, \"y\":3, \"color\":\"blue\", \"number\":2, \"clicked\": false, disabled: true },\r\n    ]\r\n];\r\n\r\nconst standardLocks = [\r\n    {\"row\" : 0, \"color\" : \"red\", \"clicked\" : false },\r\n    {\"row\" : 1, \"color\" : \"yellow\", \"clicked\" : false },\r\n    {\"row\" : 2, \"color\" : \"green\", \"clicked\" : false },\r\n    {\"row\" : 3, \"color\" : \"blue\", \"clicked\" : false }\r\n];\r\n\r\nconst baseScores = [\r\n    { \"color\":\"red\",    \"score\":0,    \"hidden\":true },\r\n    { \"color\":\"yellow\", \"score\":0,    \"hidden\":true },\r\n    { \"color\":\"green\",  \"score\":0,    \"hidden\":true },\r\n    { \"color\":\"blue\",   \"score\":0,    \"hidden\":true },\r\n    { \"color\":\"grey\",   \"score\":0,    \"hidden\":true },\r\n    { \"color\":\"total\",  \"score\":null, \"hidden\":false }\r\n]\r\n\r\nexport default Scorecard;","C:\\Projects\\qwixx\\src\\components\\numberSquare.js",[],"C:\\Projects\\qwixx\\src\\components\\lock.js",[],"C:\\Projects\\qwixx\\src\\components\\passChecks.js",[],"C:\\Projects\\qwixx\\src\\components\\score.js",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":239,"column":60,"nodeType":"47","messageId":"48","endLine":239,"endColumn":62},{"ruleId":"45","severity":1,"message":"49","line":240,"column":64,"nodeType":"47","messageId":"48","endLine":240,"endColumn":66},{"ruleId":"45","severity":1,"message":"49","line":257,"column":57,"nodeType":"47","messageId":"48","endLine":257,"endColumn":59},{"ruleId":"45","severity":1,"message":"46","line":322,"column":57,"nodeType":"47","messageId":"48","endLine":322,"endColumn":59},{"ruleId":"41","replacedBy":"50"},{"ruleId":"43","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["52"],["53"],"no-global-assign","no-unsafe-negation"]